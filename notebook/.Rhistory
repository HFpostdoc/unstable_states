length(tt <- 
length(tt)
length(tt.)
tt
tt.
which(diff(sign(diff(tt)))==-2)+1
length(tt.)
length(tt)
(length(tt)-length(tt.))
col
my.col
table(my.col)
plot(1:5,col=1:5)
rtt
min(rtt[tt.==-1&rtt!=0])
abline(h=0.001)
abline(h=0.01)
abline(h=0.1)
rtt[tt.==-1&round(rtt,)>0.1]
(1:length(rtt[tt.==-1&round(rtt,)>0.1]))
)
dc.l[[1]]
dist(dc.m[1,])
dist(dc.m[1,])[1]
dc.d
plot(dc.d)
fps[,2]
fps[,2]+1
mode(dc.d)
type(dc.d)
class(dc.d)
fps[fps[,2]!=0,2:6])
fps[fps[,2]!=0,2:6]
class(fps[fps[,2]!=0,2:6])
mode(fps[fps[,2]!=0,2:6])
colnames(factors)
colnames(factors)
names(test)
dim(test)
plot(out[[1]])
length(out[[1]] <- 
length(out[[1]])
length(out[[1]])/2
abline(v=22941)
asd <- gl(I(length(out[[1]])/2),2)
asd
dir()
pwd()
getwd()
start
end
length(out)
dim(x)
cell.layout
x.sm[[1]][,1]
x.sm[[1]][,1]
i=1
length(out[[1]])
nrow(x.sm[[1]])
i
out[[i]]
length(out[[i]])
length(x.sm[[i]])
nrow(x.sm[[i]])
x.sm[[i]][1:length(out[[i]]),]
x.sm[[i]]
dim(x.sm[[i]])
cor(cbind(out[[i]],x.sm[[i]][1:length(out[[i]]),]))
x.sm[[i]][1:length(out[[i]]),]
dim(x.sm[[i]])
head(x.sim[[i]])
head(x.sm[[i]])
1:length(out[[i]])
dim(x.sm[[i]])
length(out[[i]])
ug1.p[[1]]
length(ug1.p)
range(unlist(ug1.p))
plot(1:4,col=rainbow(4))
head(fps)
paste(fps$a,fps$b)
paste(fps$a,fps$b,sep='')
table(paste(fps$a,fps$b,sep=''))
unique(paste(fps$a,fps$b,sep=''))
sort(unique(paste(fps$a,fps$b,sep='')))
sort(as.numeric(unique(paste(fps$a,fps$b,sep=''))))
findPeaks(out[[1]])
plot(findPeaks(out[[1]]))
plot(findPeaks(out[[1]]),type='l')
head(x)
findPeaks
xm
lapply(xm,length)
unlist(lapply(xm,length))
table(unlist(lapply(xm,length)))
xm.l
pairs(data.frame(xm.l,fps))
warnings()
x[,58]
plot(x[,58])
(1:ncol(x))[is.na(unlist(xm.c))]
test <- (1:ncol(x))[is.na(unlist(xm.c))]
for (i in test){plot(x[,i]);locate(1)}
for (i in test){plot(x[,i]);locator(1)}
for (i in test){plot(x[,i],ylab=i);locator(1)}
Sys.time()
> for (i in test){ts <- Sys.time();plot(x[,i],ylab=i);te <- Sys.time();while(abs(ts-te)){te <- Sys.time()}}
> for (i in test){ts <- Sys.time();plot(x[,i],ylab=i);te <- Sys.time();while(abs(ts-te)<5){te <- Sys.time()}}
for (i in test){ts <- Sys.time();plot(x[,i],ylab=i);te <- Sys.time();while(abs(ts-te)<5){te <- Sys.time()}}
xm.c
head(fps)
library(rgl)
install.packages('scatterplot3d')
?scatterplot3d
head(fps)
fps$Prey
fps$a
fps$a[fps$Prey==1]
order(fps$a[fps$Prey==1])
fps$a[fps$Prey==1]
(fps$a[fps$Prey==1]/max(fps$a[fps$Prey==1]))
(fps$a[fps$Prey==1]/max(fps$a[fps$Prey==1]))10
(fps$a[fps$Prey==1]/max(fps$a[fps$Prey==1]))*10
levels(fps$a[fps$Prey==1])
factor(fps$a[fps$Prey==1])
as.numeric(factor(fps$a[fps$Prey==1]))
rot.ang
ts
tf
ts-tf
abs(ts-tf)
rot.ang
rot.f
rot.ang <- rot.f
]
2
n
names(aapl)
test <- read.csv('http://finviz.com/export.ashx?v=111&t=aapl,cat&o=ticker')
test
head(index)
dim(index)
stocks
stocks
i=1
data[[i]]
length(stocks)
i
stocks[i]
names(data)
